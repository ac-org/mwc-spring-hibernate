<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <global-method-security pre-post-annotations="enabled" />
    
    <http auto-config="true" use-expressions="true">
        <access-denied-handler error-page="/public/accessDenied" />
        <intercept-url pattern="/mwcUser/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/series/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/seriesDetails/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/**" access="permitAll" />
        <form-login
            login-page="/public/login"
            default-target-url="/"
            authentication-failure-url="/public/loginfailed" />
        <logout logout-success-url="/logout" />
        <remember-me />
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="
					SELECT USERNAME, PASSWORD, ENABLED 
					FROM mwc_user WHERE USERNAME=?" 
				
                               authorities-by-username-query="
					SELECT u.USERNAME, ur.AUTHORITY FROM mwc_user u, mwc_user_role ur 
					WHERE u.ID = ur.MWC_USER_ID and u.USERNAME=?  " 
					
            />
            <password-encoder ref="mwcPasswordEncoder"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>
